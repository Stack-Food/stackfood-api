name: Build and Publish Docker images

on:
  push:
    branches: ["master", "develop"]
    tags: ["v*.*.*"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  API_IMAGE_NAME: ${{ github.repository }}/api
  WORKER_IMAGE_NAME: ${{ github.repository }}/worker
  GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

jobs:
  build_and_publish:
    name: Build and Publish Docker images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if Dockerfiles exist
        run: |
          if [ ! -f ./src/Adapters/Driving/StackFood.API/Dockerfile ]; then
            echo "❌ API Dockerfile not found!" && exit 1
          fi
          if [ ! -f ./src/Adapters/Driving/StackFood.Worker/Dockerfile ]; then
            echo "❌ Worker Dockerfile not found!" && exit 1
          fi

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: "v2.2.4"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ env.GITHUB_TOKEN }}

      # API IMAGE BUILD AND PUSH
      - name: Define API image tags
        id: api-tagger
        run: |
          # Nome do repositório em minúsculas (sem github.repository na tag)
          REPO=$(echo "${{ env.REGISTRY }}/stackfood-api" | tr '[:upper:]' '[:lower:]')

          # Definição simples de tags com base na branch
          if [[ "${GITHUB_REF}" == "refs/heads/develop" ]]; then
            TAGS="${REPO}:develop"
          elif [[ "${GITHUB_REF}" == "refs/heads/master" ]]; then
            TAGS="${REPO}:master"
          elif [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION_TAG=$(echo "${GITHUB_REF}" | sed 's|refs/tags/||')
            TAGS="${REPO}:${VERSION_TAG}"
          fi

          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Extract API Docker metadata
        id: api-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.API_IMAGE_NAME }}

      - name: Build and push API Docker image
        id: api-build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./src/Adapters/Driving/StackFood.API/Dockerfile
          push: true
          tags: ${{ steps.api-tagger.outputs.tags }}
          labels: ${{ steps.api-meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha,scope=api
          cache-to: type=gha,scope=api,mode=max

      - name: Sign the Docker image
        env:
          TAGS: ${{ steps.tagger.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          IFS=',' read -ra TAG_ARRAY <<< "${TAGS}"
          for TAG in "${TAG_ARRAY[@]}"; do
            echo "Signing ${TAG}@${DIGEST}"
            cosign sign --yes "${TAG}@${DIGEST}"
          done
      # WORKER IMAGE BUILD AND PUSH
      - name: Define Worker image tags
        id: worker-tagger
        run: |
          # Nome do repositório em minúsculas (sem github.repository na tag)
          REPO=$(echo "${{ env.REGISTRY }}/stackfood-worker" | tr '[:upper:]' '[:lower:]')

          # Definição simples de tags com base na branch
          if [[ "${GITHUB_REF}" == "refs/heads/develop" ]]; then
            TAGS="${REPO}:develop"
          elif [[ "${GITHUB_REF}" == "refs/heads/master" ]]; then
            TAGS="${REPO}:master"
          elif [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION_TAG=$(echo "${GITHUB_REF}" | sed 's|refs/tags/||')
            TAGS="${REPO}:${VERSION_TAG}"
          fi

          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Extract Worker Docker metadata
        id: worker-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.WORKER_IMAGE_NAME }}

      - name: Build and push Worker Docker image
        id: worker-build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./src/Adapters/Driving/StackFood.Worker/Dockerfile
          push: true
          tags: ${{ steps.worker-tagger.outputs.tags }}
          labels: ${{ steps.worker-meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha,scope=worker
          cache-to: type=gha,scope=worker,mode=max

      - name: Sign the Worker Docker image
        env:
          TAGS: ${{ steps.worker-tagger.outputs.tags }}
          DIGEST: ${{ steps.worker-build-and-push.outputs.digest }}
        run: |
          IFS=',' read -ra TAG_ARRAY <<< "${TAGS}"
          for TAG in "${TAG_ARRAY[@]}"; do
            echo "Signing ${TAG}@${DIGEST}"
            cosign sign --yes "${TAG}@${DIGEST}"
          done
